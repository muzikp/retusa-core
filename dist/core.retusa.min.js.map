{"version":3,"file":"core.retusa.min.js","mappings":"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","sources":["webpack://retusa-core/webpack/universalModuleDefinition","webpack://retusa-core/./index.js","webpack://retusa-core/./libs/extensions.js","webpack://retusa-core/./libs/locale.js","webpack://retusa-core/./libs/matrix.js","webpack://retusa-core/./libs/vector.js","webpack://retusa-core/webpack/bootstrap","webpack://retusa-core/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","var eventHandler = async function() {return false};\r\nconst locale = require('./libs/locale');\r\nArray.prototype.eventHandler = eventHandler;\r\nObject.prototype.eventHandler = eventHandler;\r\nArray.eventHandler = eventHandler;\r\nObject.eventHandler = eventHandler;\r\nArray.prototype.locale = locale;\r\nObject.prototype.locale = locale;\r\nArray.prototype.$ = locale.call;\r\nObject.prototype.$ = locale.call;\r\nArray.$ = locale.call;\r\nObject.$ = locale.call;\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Allows external function to access the module exports.      \r\n     * @returns Return the module.exports content.\r\n     */\r\n    use: function() {\r\n        for(let p of [...arguments]) {\r\n            p(module.exports);\r\n        };\r\n        return module.exports;\r\n    },    \r\n    register: function() {\r\n        return module.exports;\r\n    },\r\n    addDictionary: function(language, data, overwriteExisting) {\r\n        locale.setData(language, data, overwriteExisting);\r\n        return module.exports;\r\n    },\r\n    setLanguage: function(language) {\r\n        locale.setDefault(language);\r\n        return module.exports;\r\n    },\r\n    setListener: function(listenerFunction) {\r\n        module.exports.call = listenerFunction;\r\n        return module.exports;\r\n    },\r\n    listen: function(fn){\r\n        eventHandler = fn;\r\n        Array.prototype.eventHandler = eventHandler;\r\n        Object.prototype.eventHandler = eventHandler;\r\n        Array.eventHandler = eventHandler;\r\n        Object.eventHandler = eventHandler;\r\n        return module.exports;\r\n    },\r\n    toLocale: locale.call,\r\n    ...(require(\"./libs/vector\")),\r\n    ...(require(\"./libs/matrix\"))\r\n}\r\n\r\n","Array.prototype.hasOnlyVectorChildren = function() {\r\n  return this.filter(e => !e?.isVector).length == 0;\r\n}\r\n/*\r\nArray.prototype.flush = function() {\r\n  while (this.length > 0) {\r\n    this.pop();\r\n  }\r\n}\r\n*/\r\n\r\nArray.prototype.asc = function(){\r\n    return this.sort((a,b) => a > b ? 1 : a < b ? -1 : 0);\r\n}\r\n\r\nArray.prototype.desc = function(){\r\n  return this.sort((a,b) => a > b ? -1 : a < b ? 1 : 0);\r\n}\r\n\r\nArray.prototype.distinct = function() {\r\n\treturn this.filter((obj, index, self) => {\r\n\t\t\treturn self.findIndex(t => JSON.stringify(t) === JSON.stringify(obj)) === index;\r\n\t}); \r\n}\r\n\r\nArray.prototype.toAvgRanks = function(desc = false) {\r\n\tconst dir = desc ? -1 : 1;\r\n  const _ = [...this].sort((a,b) => a > b ? dir : a < b ? -dir :0);  \r\n  var map = new Map();\r\n  for(var i = 0; i < _.length; i++) {    \r\n    var f = map.get(_[i]);    \r\n    if(!f) map.set(_[i], i + 1)\r\n    else map.set(_[i], f += 0.5);    \r\n  };    \r\n  return this.map(e => map.get(e));\r\n}\r\n\r\nString.prototype.fill = function(what, repetition) {\r\n\tvar x = \"\";\r\n\tfor(var i = 0; i < repetition; i++) {\r\n\t\tx =+ what;\r\n\t}\r\n\treturn x;\r\n}\r\n\r\n\r\nMath.getRandomIndexes = function(total_of_elements, samplesize) {\r\n    var indexes = [];\r\n    if(total_of_elements < samplesize) samplesize = total_of_elements;\r\n    while (indexes.length < samplesize) {\r\n        var v = Math.round(Math.random()*total_of_elements);\r\n        if(indexes.indexOf(v) < 0) indexes.push(v);\r\n    };\r\n    return indexes;\r\n}\r\n\r\nMath.rndNumber = function(min,max,decimal = 2) {\r\n    let multiplier = Math.pow(10, decimal || 0);\r\n    return Math.floor(Math.random() * (max - min) * multiplier + min * multiplier) / multiplier;\r\n}\r\n\r\nMath.rndSelect = function(array, total = 1, allowDuplicates = false) {\r\n    if(total >= array.length) return array;\r\n    var _sample = [];\r\n    while (_sample.length < total) {\r\n        var index = Math.floor(Math.random() * array.length);\r\n        if(!allowDuplicates) {\r\n            if(_sample.indexOf(array[index] < 0)) _sample.push(array[index]);   \r\n        } else _sample.push(array[index]);\r\n    }\r\n    return _sample;\r\n}\r\n\r\nMath.rndSelectOne = function(array) {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nMath.sign = function(x) {\r\n    if (x == 0)\r\n        return 0;\r\n    return x > 0 ? 1 : -1;\r\n}\r\n\r\nFunction.prototype.stringify = function(indent = \"\\t\") {\r\n    var raw = this.toString().match(/function[^{]+\\{([\\s\\S]*)\\}$/)[1];\r\n    var formatted = \"\";\r\n    raw.split(/\\n/g).forEach(l => formatted += l.trim() + \"\\n\");\r\n    return formatted.trim();\r\n}\r\n\r\nDate.isDate = function(date) {\r\n    return (date instanceof Date && !isNaN(date.valueOf()))\r\n}\r\n\r\nString.fillRnd = function(length) {\r\n    return generateRandomString(length);\r\n}\r\n\r\nArray.prototype.fillRnd = function() {\r\n    return generateRandomString(this.length);\r\n}\r\n\r\nfunction generateRandomString(length=8) {\r\n    let result = '';\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const charactersLength = characters.length;\r\n    let counter = 0;\r\n    while (counter < length) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n      counter += 1;\r\n    }\r\n    return result;\r\n}\r\n\r\nmodule.exports = {Array, Math, String, Function, Date};","\"use strict\";\r\nrequire(\"./extensions\");\r\n\r\nconst __default = \"en-GB\";\r\nvar factory = {\r\n    \"default\": {\r\n        \"GSEH\": \"Dictionary data argument must be an object and cannot be empty.\",\r\n        \"kaex\": \"Language ${value} not registered, switching to default (${default}).\",\r\n        \"91ECQmAF\": \"The argument is not neither a vector nor an Array. Detected type: ${type}\",\r\n        \"Rj0axQCr\": \"Failed to parse the matrix data.\"\r\n    }\r\n};\r\nvar wordList = {\r\n    \"default\": function() {\r\n        return String.fillRnd(8);\r\n    }\r\n};\r\n\r\nvar _default = (function() {\r\n    if(typeof window !== \"undefined\") return window?.localStorage?.getItem(\"language\") || window.navigator?.language || window.navigator?.userLanguage || __default;\r\n    else return Intl.DateTimeFormat().resolvedOptions().locale;\r\n})();\r\nif(!factory[_default]) _default = __default;\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Sets the locale data for either existing or non existing locale set and returns the module.\r\n     * @param {string} language Intl language code\r\n     * @param {object} data JSON object with key (random code) an value (text) elements\r\n     * @param {boolean} overwriteExisting If true, keys present in the existing set will be overwriten with new values. Default true.\r\n     * \r\n     */\r\n    setData: function(language, data, overwriteExisting=true) {\r\n        if(typeof data != \"object\") throw module.exports.call(\"GSEH\");\r\n        if(!factory[language]) factory[language] = {};\r\n        Object.keys(data).forEach(function(key){\r\n            if(!overwriteExisting && !factory[language][key]) factory[language][key] = data[key];\r\n            else factory[language][key] = data[key];\r\n        });\r\n        return module.exports;\r\n    },\r\n    getDefault: function() {return _default},\r\n    /**\r\n     * Set the default language. If empty, the default value is reset to the local language default.\r\n     * @param {string} value Language i18n or another code.\r\n     * @returns {module.exports} Returns the module.\r\n     */\r\n    setDefault: function(value) {\r\n        if(value === undefined) _default = __default;\r\n        else if(!value) _default = Intl.DateTimeFormat().resolvedOptions().locale;\r\n        else if(!factory[value]) \r\n        {\r\n            console.warn(module.exports.call(\"kaex\", {value: value, default:  __default}));            \r\n            _default = __default;\r\n        }\r\n        else _default = value;\r\n        return module.exports;\r\n    },\r\n    call: function(code, data = {}) {        \r\n        let _ = factory[_default];\r\n        if(!_) _ = factory[\"default\"];\r\n        if(!code) return \"\";\r\n        else if(typeof code == \"object\") {\r\n            var _text = _default ? code[_default] : Object.entries(code)[0][1];\r\n            return _replace(_text, data)\r\n        }\r\n        var _text = _[code];        \r\n        if(!_text) return _replace(code,{value: code});\r\n        else {\r\n            _text = _replace(_text, data)\r\n            return _text;\r\n        }\r\n    },\r\n    /**\r\n     * \r\n     * @returns Returns a list of available languages, both built-in and custom.\r\n     */\r\n    listLanguages: function(){\r\n        return Object.keys(factory);\r\n    },\r\n    /**\r\n     * Sets the list of words that are used while generating a StringVector instances. It can either be an array of strings or a function generating the words.\r\n     * @param {String} language \r\n     * @param {Array<String> | function} list\r\n     * @returns Return the module.exports-\r\n     */\r\n    setWordList: function(language, list) {\r\n        wordList[language] = list;\r\n        return module.exports;\r\n    },\r\n    getRandomWord: function() {\r\n        var g = wordList[_default] || wordList[\"default\"];\r\n        if(Array.isArray(g)) return Math.rndSelectOne(g);\r\n        else return g(...arguments);        \r\n    },\r\n    getRandomWords: function(length) {\r\n        var g = wordList[_default] || wordList[\"default\"];                              \r\n        if(Array.isArray(g)) return Math.rndSelect(g, length, false);\r\n        else return Array(length).fill(0).map(e => g());       \r\n    }\r\n}\r\n\r\nconst _replace = function(text, data) {\r\n    var keys = (text.match(/\\$\\{(.*?)\\}/g) || []).map(i => i.match(/\\$\\{(.*)\\}/)[1]);\r\n    keys.forEach(function(k){\r\n        text = text.replace(\"\\$\\{\" + k + \"\\}\", () => data[k])\r\n    });\r\n    return text;\r\n}","\"use strict\";\r\n\r\nvar {NumericVector, StringVector, BooleanVector, TimeVector, Vector} = require(\"./vector\");\r\n\r\nrequire(\"./extensions\");\r\nconst registry = new WeakMap();\r\nlet defaultEventHandlers = [\r\n    {eventName: \"matrix.vector.added\", filter: null, on: true, handler: function(event){\r\n        \r\n    }},\r\n    {eventName: \"matrix.vector.removed\", filter: null, on: true, handler: function(event){\r\n        \r\n    }},\r\n    {eventName: \"matrix.order.changed\", filter: null, on: true, handler: function(event){\r\n        \r\n    }}\r\n];\r\n\r\nfunction setRegistryProperty(parent, key, value) {    \r\n    if(!registry.get(parent)) registry.set(parent, {});\r\n    registry.get(parent)[key] = value;    \r\n}\r\n\r\nfunction getRegistryProperty(parent, key = null) {    \r\n    return key ? registry.get(parent)[key] : registry.get(parent);\r\n}\r\n\r\n\r\n// #region MATRIX\r\n\r\nArray.prototype.matrify = function() {\r\n    var M = new Matrix();\r\n    for(var i = 0; i < this.length; i++) {\r\n        M.push(!this[i]?.isVector ? this[i].vectorify() : this[i])\r\n    }\r\n    return M;\r\n}\r\n\r\nclass Matrix extends Array {\r\n    /**\r\n     * Initializes a new instance of the Matrix class.\r\n     */\r\n    constructor(){        \r\n        super();\r\n        registry.set(this, {id: String.fillRnd(16)});        \r\n        setRegistryProperty(this, \"eventHandlers\", defaultEventHandlers);\r\n        this.trigger(\"matrix.created\");\r\n        this.push(...arguments);\r\n    }\r\n    id() {\r\n        return getRegistryProperty(this, \"id\");\r\n    }\r\n    /**\r\n     * Gets or sets the name of this matrix. If the argument 'value' is empty, it returns the name of this matrix (if set before). Otherwise the name of the matrix is set and the matrix itself is returned.\r\n     * So far, there can be only one name for all possible matrices as WeakMap seems to not support array keys (matrix is an array in fact).\r\n     * @param {string | empty} value Optional: name of the matrix.\r\n     * @returns Either name or the matrix itself.\r\n     */\r\n    name(value, alwaysReturnSelf = false){\r\n        const old = getRegistryProperty(this, \"name\");\r\n        if(value !== undefined) {\r\n            setRegistryProperty(this, \"name\", value);\r\n            if(old !== \"value\") this.trigger(\"matrix.name.changed\", {old: old, new: value});\r\n            return this;\r\n        } else {\r\n            if(getRegistryProperty(this, \"name\") !== undefined) return getRegistryProperty(this, \"name\");\r\n            else if(alwaysReturnSelf) return this;\r\n            else return null;\r\n        }\r\n    }\r\n    push() {\r\n        const old = this.length;\r\n        for(let a of [...arguments].filter(v => v)) {\r\n            if(a?.isVector) {\r\n                if(this.find(v => v.id() === a.id())) {\r\n                    console.warn(`Vector ${a.name() || a.id()} is already a member of the matrix.`);\r\n                } else super.push.call(this,a);\r\n            }\r\n            else if(Array.isArray(a)) {\r\n                super.push.call(this, a.vectorify());\r\n            }\r\n            else {\r\n                console.error(a);\r\n                throw this.$(\"91ECQmAF\", {type: typeof a});                \r\n            }\r\n        };\r\n        if(this.length > old) this.trigger(\"matrix.value.added\", {index: old, length: this.length - old});\r\n        return this.length;\r\n    }\r\n    map(callbackFn, thisArg = this) {\r\n        if(!callbackFn) return this;\r\n        var isMatrix = true;\r\n        var _m = [];\r\n        var i = 0;\r\n        for(let v of thisArg || this) {\r\n            var e = callbackFn(v, i, thisArg);\r\n            i++;\r\n            if(!e?.isVector) isMatrix = false;\r\n            _m.push(e);\r\n        };\r\n        if(isMatrix) {\r\n            _m = new Matrix(..._m).name(this.name());\r\n        }\r\n        return _m;\r\n    }    \r\n    /**\r\n     * Similar to a pivot table in Excel without aggregation. Converts a matrix of two vectors to a new matrix where the new factors are named after the unique values from the original factor. Nov vectors are filled with values that match the row filter in the original matrix.\r\n     * @param {Vector identifier} target \r\n     * @param {Vector identifier} factor \r\n     * @param {Array} selectedKeys Optional. If you want to pivot only selected values from the factor vector, enlist them in the selectedKeys argument.\r\n     * @returns {Matrix}\r\n     */\r\n    pivot(target, factor, selectedKeys = []) {\r\n        target = this.item(target);\r\n        factor = this.item(factor);\r\n        const selection = this.select(target, factor);\r\n        const pivot = new Matrix();        \r\n        for(let key of factor.distinct().intersection(selectedKeys)) {\r\n            var v = new target.constructor(...selection.filter(factor, (v) => v === key)[0]).name(key).label(factor.format(key)).formatter(target.formatter(), true);\r\n            pivot.push(new target.constructor(...selection.filter(factor, (v) => v === key)[0]).name(key).label(factor.format(key)).formatter(target.formatter(), true));\r\n\r\n        }\r\n        return pivot;\r\n    }\r\n    clone(flush = false) {\r\n        return new Matrix(...new Array(...this).map(v => v.clone())).name(this.name(), true);\r\n    }\r\n    /**\r\n     * Returns a vector according to the specified identifier. The identifier argument is extremely flexible, it can be a number (the order of the vector), text (either the name or the id of the vector), an instance of the vector, or a filter function with which the vector is searched in the matrix.\r\n     * @param {number | string | Vector | function} identifier \r\n     * @returns {Vector} Returns a Vector instance or (if not found) null.\r\n     */\r\n    item(identifier) {\r\n        if(!identifier && identifier !== 0) return null;\r\n        else if(!isNaN(identifier)) return this[Number(identifier)];\r\n        else if(typeof identifier == \"string\") return this.find(v => (v.id() == identifier || v.name() == identifier));\r\n        else if(identifier?.isVector) return this.find(v => v.id() === identifier.id());        \r\n        else if(identifier.constructor?.name == \"Function\") return this.find(identifier);\r\n        else return null;\r\n    }\r\n    /* removes a single vector from the matrix */\r\n    remove(identifier) {        \r\n        var id = this.item(identifier).id();\r\n        return this.filter(e => e.id() != id);\r\n        var clone = this.clone();        \r\n        delete clone[index];\r\n        return new Matrix(...clone);\r\n    }\r\n    select(...identifiers) {\r\n        var clone = new Matrix().name(this.name(), true);\r\n        for(let i of identifiers) {\r\n            var v = this.item(i);\r\n            if(v) clone.push(v);\r\n        }\r\n        return clone;\r\n    }\r\n    slice(from = 0, to = Infinity) {\r\n        var M = new Matrix();\r\n        for(let a = from < 0 ? 0 : from; a < (to >= this.length ? this.length : to); a++)\r\n        {\r\n            M.push(this[a]);\r\n\r\n        };\r\n        return M;\r\n    }\r\n    /** \r\n     * Attention! This method significantly extends the base method of the Array parent class. The method shows different behavior with respect to the number and type of arguments. If only one argument is given, the method behaves according to the following types:\r\n\r\n       1) function: standard filtering as in Array\r\n       2) Array: is taken as an array of row indices to be returned\r\n\r\n    In the event that multiple filters of different vectors are to be considered at the same time, the arguments are given in a row as 1) vector identifier and 2) vector filter function. In this way, it is possible to sort the required number of identifier/function pairs one after the other, e.g. <Matrix>.filter(2, (v,i,arr) => v > 30, \"B\", (v,i,arr) = > in == 5).\r\n     * @return {this | null} A filtered matrix.\r\n    */\r\n    filter() {\r\n        if([...arguments].length === 0) return this;\r\n        else if([...arguments].length === 1) {\r\n            var arg = [...arguments][0];\r\n            if(typeof arg == \"function\") return new Matrix(...new Array(...this).filter(arg));\r\n            /* filters rows by indexes */\r\n            else if(Array.isArray(arg)) {\r\n                var target = this.clone().flush();\r\n                for(var i = 0; i < arg.length; i++) {\r\n                    target.appendRow(...this.row(arg[i]))\r\n                }\r\n                return target;\r\n            }\r\n            else return null;\r\n        }\r\n        else {\r\n            var groups = [];\r\n            if([...arguments].length % 2 !== 0) throw new Error(\"Odd number of arguments!!\")\r\n            for(var i = 0; i < [...arguments].length; i +=2) {\r\n                groups.push({\r\n                    v: this.item([...arguments][i]),\r\n                    f: [...arguments][i + 1]\r\n                });\r\n            };\r\n            var target = this.clone().flush();\r\n            for(var r = 0; r < this.maxRows(); r++) {   \r\n                if(groups.map(g => g.f(g.v[r], r, g.v)).filter(g => g).length === groups.length) {\r\n                    target.appendRow(...this.row(r))\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    filterByIndex(...indexes) {\r\n        var _ = new Matrix();\r\n        for(let v of this) {\r\n            _.push(v.filterByIndex(...indexes));\r\n        }\r\n        return _;\r\n    }\r\n    /** Removes rows with any null value across all values in the row. */\r\n    removeEmpty() {\r\n        var fs = new Array(...this).map((v,i) => [i, (v) => v !== null]).flat(Infinity);\r\n        return this.filter(...fs);\r\n    }\r\n    /**\r\n     * Returns an array of values across the indexed row.\r\n     * @param {number} index Row index.\r\n     * @returns {Array} An array of the row values.\r\n     */\r\n    row(index) {\r\n        if(index > this.maxRows() - 1) return null;\r\n        return new Array(...this).map(v => v[index] || null);\r\n    }\r\n    rows(asObject = false) {\r\n        var rows = [];\r\n        for(var r = 0; r < this.maxRows(); r++)\r\n        {\r\n            var row = [];\r\n            for(var c = 0; c < this.length; c++ ) {\r\n                row.push(this[c][r]);\r\n            }\r\n            rows.push(row);\r\n        }\r\n        return rows;\r\n    }\r\n    appendRow(...values) {\r\n        for(var i = 0; i < values.length; i++) {\r\n            (this[i] || []).push(values[i])\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the vector values but leaves the matrix structure (in terms of vector types etc.) intact.\r\n     * @returns {this}\r\n     */\r\n    flush() {\r\n        for(var v of this) {\r\n            v.flush();\r\n        };\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the length of the vector with the largest number of elements.\r\n     * @returns {number}\r\n     */\r\n    maxRows() {\r\n        return Math.max(...new Array(...this).map(v => v.length));\r\n    }\r\n    minRows() {\r\n        return Math.min(...new Array(...this).map(v => v.length));\r\n    }\r\n    /**\r\n     * Randomly filters N of cases from the variable values.\r\n     * @param {number} size If the argument is less than 1, it is considered the percentage of cases to be selected from among the values. If greater than or equal to 1, the argument is treated as the absolute number of cases to be selected.\r\n     */\r\n    sample(size) {\r\n        var indexes = (size < 1 ? Math.getRandomIndexes(this.maxRows(), Math.round(size * this.maxRows())) : Math.getRandomIndexes(this.maxRows(), size > this.maxRows() ? this.maxRows() : Math.round(size))).sort();\r\n        return this.filter(indexes);\r\n    }\r\n    analyze(method) {\r\n        return new MatrixAnalysis(method, this);\r\n    }\r\n    serialize(stringify = false, config = {beautify: false}) {\r\n        var _m = {\r\n            id: this.id(),\r\n            name: this.name(),\r\n            vectors: []\r\n        };\r\n        for(var v of this) {\r\n            _m.vectors.push(v.serialize());\r\n        };\r\n        if(stringify) _m = JSON.stringify(_m, config.beautify ? \"\\t\" : null, config.beautify ? \"\\t\" : null);\r\n        return _m;\r\n    }\r\n    orderBy(identifier, direction) {\r\n        var schema = direction == \"asc\" ? this.item(identifier)?.ascIndex() : direction == \"desc\" ? this.item(identifier)?.descIndex() : null;\r\n        if(schema) {\r\n            return this._with()\r\n        }\r\n    }\r\n    _with() {\r\n        return this.empty()._push(...arguments);\r\n    }\r\n    async trigger(eventName, data) {              \r\n        this.eventHandler ? this.eventHandler({name: eventName, data: data || {}, who: this}) : false;\r\n    }\r\n    static deserialize(source) {\r\n        if(typeof source != \"object\") {\r\n            try {\r\n                source = JSON.parse(source);\r\n            } catch(e) {\r\n                throw this.$(\"Rj0axQCr\");                \r\n            }\r\n        }\r\n        var M = new Matrix().name(source.name);\r\n        source.vectors.forEach(v => M.push(Vector.deserialize(v)));\r\n        return M;        \r\n        \r\n    }    \r\n    /**\r\n     * \r\n     * @returns {Array} Return an array of this matrix's vectors descriptions (index, name, label, length, formatter).\r\n     * \r\n     */\r\n    info() {\r\n        return this.map((v,i) => ({index: i, name: v.name(), label: v.label(), length: v.length, formatter: v.formatter()}));\r\n    }\r\n}\r\n\r\nMatrix.prototype.isMatrix = true;\r\n\r\nmodule.exports = {\r\n    Matrix: Matrix    \r\n};","\"use strict\";\n\nconst {Array, Math, String, Function} = require(\"./extensions\");\nconst meta = [\"name\",\"label\",\"formatter\"];\nconst registry = new WeakMap();\nlet defaultEventHandlers = [\n    {eventName: \"vector.value.added\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.value.changed\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.value.removed\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.name.changed\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.label.changed\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.created\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.sample.init\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.sample.end\", filter: null, on: true, handler: function(event){\n        \n    }},\n    {eventName: \"vector.order.changed\", filter: null, on: true, handler: function(event){\n        \n    }}\n];\n\nfunction setRegistryProperty(parent, key, value) {    \n    if(!registry.get(parent)) registry.set(parent, {});\n    registry.get(parent)[key] = value;    \n}\n\nfunction getRegistryProperty(parent, key = null) {    \n    return key ? registry.get(parent)[key] : registry.get(parent);\n}\n\nclass Vector extends Array {\n    constructor() {\n        super();        \n        registry.set(this, {id: String.fillRnd(16)});        \n        setRegistryProperty(this, \"eventHandlers\", defaultEventHandlers);\n        this.trigger(\"vector.created\");\n        if([...arguments].length > 0) this.push(...arguments);        \n    }        \n    //#region METADATA\n    /**\n     * Gets or sets the name of this vector. If the argument 'value' is empty, it returns the name of this vector (if set before). Otherwise the name of the vector is set and the vector itself is returned.\n     * @param {string} value Optional: name of the vector.\n     * @param {boolean} alwaysRetunSelf Default false. If set to true, will return the vector itself even if the name is blank/empty.\n     * @returns {Vector | String} Either the name or the vector itself.\n     */\n    name(value, alwaysRetunSelf){        \n        if(value) {          \n            const old = this.name()  ;\n            setRegistryProperty(this, \"name\", value);            \n            if(value !== old) this.trigger(\"vector.name.changed\", {old: old, new: value})\n            return this;\n        } else {\n            if(alwaysRetunSelf) return this;\n            else return registry.get(this).name;\n        }\n    }\n    /**\n     * Gets or sets the label for this vector. If the argument 'value' is empty, it returns the label of this vector (if set before). Otherwise the label of the vector is set and the vector itself is returned.\n     * @param {string} value Optional: name of the vector.\n     * @param {boolean} alwaysRetunSelf Default false. If set to true, will return the vector itself even if the label is blank/empty.\n     * @returns {Vector | String} Either the label or the vector itself.\n     */\n    label(value, alwaysRetunSelf){\n        if(value) {\n            const old = getRegistryProperty(this, \"label\");\n            setRegistryProperty(this, \"label\", value);\n            if(value !== old) this.trigger(\"vector.label.changed\", {old: old, new: value})\n            return this;\n        } else {\n            if(alwaysRetunSelf) return this;\n            else return registry.get(this).label || registry.get(this).name;\n        }\n    }\n    /**\n     * Gets or sets the formatter for this vector. If the argument 'value' is empty, it returns the formatter of this vector (if set before). Otherwise the formatter of the vector is set and the vector itself is returned.\n     * @param {Function | Object} value Optional: either a function of an object.\n     * @param {boolean} alwaysRetunSelf Default false. If set to true, will return the vector itself even if the label is blank/empty.\n     * @returns {Vector | String} Either the formatter or the vector itself.\n     */\n    formatter(value, alwaysRetunSelf) {\n        if(value) {\n            const old = getRegistryProperty(this, \"formatter\");\n            setRegistryProperty(this, \"formatter\", value);\n            if(value !== old) this.trigger(\"vector.formatter.changed\", {old: old, new: value})\n            return this;\n        } else {\n            if(alwaysRetunSelf) return this;\n            else return registry.get(this).formatter;\n        }\n    }\n    /**\n     * Copies the vector metadata (name, label etc.) from a source vector to this vector.\n     * @param {Vector} source The vector from which to copy the vector metadata.\n     * @returns Returns the vector itself.\n     */\n    getMeta(source, includeId) {\n        if(!registry.get(source)) registry.set(source, {});\n        if(!registry.get(this)) registry.set(this, {});\n        let _meta = meta;\n        if(includeId) _meta.push(\"id\");\n        for(let m of meta) {\n            setRegistryProperty(this, m, registry.get(source)[m]);\n        }\n        return this;\n    }    \n    /**\n     * Gets ID of this vector, generated while initializing. The value cannot be modified.\n     * @returns {String} An ID of this vector.\n     */\n    id() {\n        return getRegistryProperty(this, \"id\");\n    }\n    //#endregion\n    /**\n     * Reorder the vector values ascending.\n     * @returns \n     */\n    asc() {        \n        var values = [...super.asc()].flat(1);              \n        this.length = 0;\n        super.push.call(this,...values);        \n        this.trigger(\"vector.order.changed\", {direction: \"asc\"});        \n        return this;\n    }\n    /**\n     * Returns an array of indexes of the values ordered ascending.\n     * May serve as a key for sorting a matrix by a ceratin column.\n     * @returns {Array}\n     */\n    ascIndex() {       \n        return this.raw().toAvgRanks(false);        \n    }\n    concat() {\n        return new this.constructor(...this, ...arguments).getMeta(this);\n    }    \n    desc() {\n        var values = [...super.desc()].flat(1);              \n        this.length = 0;\n        super.push.call(this,...values);        \n        this.trigger(\"vector.order.changed\", {direction: \"desc\"});        \n        return this;\n    }\n    /**\n     * Returns an array of indexes of the values ordered descending.\n     * May serve as a key for sorting a matrix by a ceratin column.\n     * @returns {Array}\n     */\n    descIndex() {\n        return this.raw().toAvgRanks(true);     \n    }\n    /**\n     * Removes the values from this vector.\n     */\n    flush() {\n\t\t\tconst length = this.length;\t\t\t\n\t\t\tsuper.length = 0;\n\t\t\tthis.trigger(\"vector.value.removed\", {index: 0, length: length});\t\t\t\n\t\t\treturn this;\n    }        \n    map() {\n        return super.map.call(this, ...arguments);\n    }\n    push(){        \n        let index = this.length;\n        for(let i of [...arguments].flat(Infinity - 1)){\n            if(this.parse) super.push(this.parse(i));\n            else super.push(i);\n        }\n        this.trigger(\"vector.value.added\", {index: index, count: this.length});\n    }\n    slice() {         \n        var that = this.reload(super.slice.call(this.raw(), ...arguments));\n    }\n    toString() {\n        return this.serialize(true);\n    }\n    //#endregion\n    \n    setLanguage(language) {\n        locale.setDefault(language);\n        return this;\n    }\n    \n    \n    /**\n     * Returns the underlying values of this vector as a plain array of primitive values.\n     */\n    raw() {\n        return [...this];\n    }\n    /**\n     * \n     * @param  {...any} values An array or set of values delimited by comma.\n     * @returns {self}\n     */\n    reload(...values) {       \n        super.length =  0;\n        this.push(...values);\n        return this;\n    }\n    /**\n\t\t * Removes empty (null) values from the vector.\n\t\t * @param {boolean} apply If true, removes empty values from the original vector. Other returns a clone without empty values. Default false.\n\t\t * @returns \n\t\t */\n    removeEmpty(apply = false) {\n\t\t\t\tconst values = this.raw().filter(e => e !== null);\n\t\t\t\tsuper.length = 0;\n\t\t\t\tsuper.push.call(this, values);\t\t\t\t\n\t\t\t\treturn this;        \n    }\n    /**\n     * Returns a formatted value (if formatted property is defined). If the formatter is an object and the value is not found in its keys (e.g. the object key!s value s undefined), returns the original value.\n     * @param {any} value Any value to be formatted.\n     */\n    format(value, index, parent) {\n        const f = getRegistryProperty(this, \"formatter\");\t\t\t\t\n        if(f)\n        {\t\t\t\t\t\n\t\t\t\t\tif(typeof f == \"object\") return f[value] !== undefined ? f[value] : value;\n\t\t\t\t\telse if(typeof f == \"function\") return f(value, index, parent || this);\n\t\t\t\t\telse if(typeof f == \"string\") {\n\t\t\t\t\t\treturn eval(`[${f}][0]`)(value, index, parent || this);\n\t\t\t\t\t}\n        }\n        else return value;\n    }\n    /**\n     * Returns an object or a stringified object with this vector's values and attributes.\n     * @param {boolean} stringify If set to true, returns a string instead of an object. Default false.\n     * @param {object} config Specifies the output format (e.g. {beautify: true})\n     * @returns {Object | string}\n     */\n    serialize(stringify = false, config = {beautify: false}) {\n        var obj = {\n            id: this.id(),\n            values: this.raw(),\n            name: this.name(),\n            label: getRegistryProperty(this, \"label\") || null,\n            type: this.type(),\n            formatter: this.formatter() ? typeof this.formatter() == \"function\" ? this.formatter().toString() : this.formatter() : null            \n        };\n        return stringify ? JSON.stringify(obj, null, config?.beautify ? \"\\t\" : \"\") : obj;\n    }\n    clone(flush = false) {\n        var _ = (flush ? new this.constructor() : new this.constructor(...this).getMeta(this));\n        log({class: \"vector\", what: this, data: {events: [\"cloned\"]}});\n        return _;\n    }    \n    /**\n    * Instead of values, this method extracts indexes of values matching the filter (see @param) and return an array of indexes. \n    * @param {function} filter A function or a strong type filter type (string). Strong type filters: notempty, empty.\n    * @return {Array<integer>} Returns an array of indexes of values matching the given filter.\n    */\n    ifilter(filter = () => true) {\n\n        return new Array(...this).map(function(v, i){\n            if(filter(v)) return i;\n            else return -1;\n        }).filter(x => x > -1 );\n    }\n    \n    filterByIndex(...indexes) {\n        return new this.constructor(...this).filter((e,i) => [...indexes].indexOf(i) > -1).getMeta(this);\n    }\n    /**\n     * Returns a clone of this vector with randomly choosen N items, where the N is defined by the \"size\" parameter. If greater than 1 then N = size; if 0 then returns the entire sample. If somewhere between, returns size*100% of the sample.\n     * @param {*} size \n     * @returns {Vector}\n     */\n    sample(size = 0) {\n        this.trigger(\"vector.sample.init\", {});\n        var clone = this.clone(true);\n        if(size <= 0) {            \n            this.trigger(\"vector.sample.end\", {});\n            return clone;\n        }\n        else if(size < 1) size = this.length * size;\n        if(size > this.length) {            \n            this.trigger(\"vector.sample.end\", {});\n            return clone;\n        }\n        else {\n            var indexes = Math.getRandomIndexes(this.length, size);\n            clone.push(...this.filter((v,i) => indexes.indexOf(i) > - 1));\n            this.trigger(\"vector.sample.end\", {});\n            return clone;\n        }\n    }\n\t\t//#region EVENT HANDLING\n\t\t/**\n\t\t * Turns-off raising events for this vector.\n\t\t * @returns {self}\n\t\t */\n\t\ton() {\n\t\t\tsetRegistryProperty(this, \"off\", false);\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Turns-off raising events for this vector.\n\t\t * @returns {self}\n\t\t */\n\t\toff() {\n\t\t\tsetRegistryProperty(this, \"off\", true);\n\t\t\treturn this;\n\t\t}\n    async trigger(eventName, data) {              \n        if(!getRegistryProperty(this,\"off\")) this.eventHandler ? this.eventHandler({name: eventName, data: data || {}, who: this}) : false;\n    }\n\n\t\t//#endregion\n    /**\n     * Converts the vector to a destinated type. Returns an error if failed. If type type arguments is equal to this vector's type value, returns itself.\n     * @param {integer} type The target type this vector should be converted to.\n     * @param {*} fn Optional: A function that converts the underlying data to the appropriate type.\n     * @returns {NumericVector | StringVector | BooleanVector} New converted vector or itself.\n     */\n    convert(type, fn) {\n        if(this.type() == type) return this;\n        else if(type == 1) {\n            if(!fn) fn = (v,i,a) => v;\n            return new NumericVector(...this.map(fn)).getMeta(this);\n        }\n        else if(type == 2) {\n            if(!fn) fn = (v,i,a) => String(v);\n            return new StringVector(...this.map(fn)).getMeta(this);\n        }\n        else if(type == 3) {\n            if(!fn) fn = (v,i,a) => v === null ? null : v ? true : false;\n            return new BooleanVector(...this.map(fn)).getMeta(this);\n        } \n        else if(type == 4) {\n            if(!fn) fn = (v,i,a) => v === null ? null : v;\n            return new TimeVector(...this.map(fn)).getMeta(this);\n        }\n        else throw new Error(`Unrecognized vector type: ${type}. Possible types: 1,2,3,4.`);\n    }\n    fill(what, count, append) {\n        var e = this.parse(what);\n        if(append) super.push(...Array(count).fill(e));\n        else this.reload(...Array(count).fill(e));\n        return this;\n    }\n    append(what, count = 1)\n    {\n        var e = this.parse(what);\n        super.push(...Array(count).fill(e));\n        return this;\n    }\n    /**\n     * A proxy function to the locale handler.\n     * @param {String} code \n     * @param {Object | undefined} data \n     * @returns {String} Result of the localization.\n     */\n    localize(code,data = {}) {\n        return $(code, data);\n    }    \n    // #region STATIC METHODS\n    static deserialize(data) {\n        if(typeof data != \"object\") {\n            try {\n                data = JSON.parse(data);\n            } catch(e) {\n                console.error(\"Failed to parse the vector data.\")\n                return null;\n            }\n        }\n        if([1,2,3,4].indexOf(data.type) < 0) throw new Error(\"Unknown vector type: \" + data.type);\n        else {\n            let vector = (data.type == 1 ? new NumericVector(...data.values) : data.type == 2 ? new StringVector(...data.values) : data.type == 3 ? new BooleanVector(...data.values) : data.type == 4 ? new TimeVector(...data.values) : new Error());\n            if(data.id) setRegistryProperty(vector, \"id\", data.id);\n            vector = vector.name(data.name).label(data.label);\n            if(data.formatter) {\n                try {\n                    vector = vector.formatter(JSON.parse())\n                } catch (e) {\n                    try {   \n                        vector = vector.formatter(data.formatter);\n                    } catch(e) {\n                        console.error(\"Failed to deserialize the formatter\", e);\n                    }\n                }\n            }\n            if(data.function) {\n\n            }\n            return vector;            \n        }\n        \n    }    \n    /**\n     * Creates a new Vector which type is defined by the arguments' types. Overloads the common array method.\n     * @returns {Vector} \n     */\n    static of() {\n        return [...arguments].vectorify();\n    }\n    static ofType(type) {     \n        return function() {\n            if(type == 1) return new NumericVector(...arguments);\n            else if(type == 2) return new StringVector(...arguments);\n            if(type == 3) return new BooleanVector(...arguments);\n            if(type == 4) return new TimeVector(...arguments);\n            else throw new Error(\"Unknown vector type: \" + type);\n        }\n    }    \n    //#endregion \n}\n\n/**\n* Whenever you need to make sure an instance is a vector or any of its extended children, call this property.\n*/\nVector.prototype.isVector = true;\n\nconst vectorParser = {\n    numeric: function(value) {\n        if(typeof value == \"string\") value = value.replace(/\\,/g, \".\").trim();\n        if(value === 0 || value === \"0\" || value === false) return 0;\n        else if(!value) return null;\n        else if(!isNaN(value)) return Number(value);\n        else throw new Error($(\"UyOj\", {value:value}));\n    },\n    string: function(value) {\n        if(value || value === false || value === 0) return String(value);\n        else return null;\n    },\n    boolean: function(value) {\n        if(value) return 1;\n        else if(value === false || value === 0 || value === \"0\" || value === \"false\") return 0;\n        else return null;\n    },\n    time: function(value) {\n        if(value === false || value === null || value === undefined) return null;\n        else if(Date.isDate(value)) return value;\n        else if(Array.isArray(value)) {\n            var _ = new Date(...value);\n        }\n        if(isNaN(new Date(value).getTime()))\n        {\n            throw new Error($(\"eZw1\", {value: value}));\n        }\n        else return new Date(value);\n    }\n}\n\n// #region VECTOR EXTENSIONS\n\nclass NumericVector extends Vector {\n    constructor(){\n        super(...arguments);\n    }\n    /**\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\n     * @returns {number | string} Returns the type of this vector.\n     */\n    type(verbose) {\n        if(verbose) return \"NumericVector\";\n        else return 1;\n    }\n    /**\n     * Generates a new numeric vector with 'total' randomly generated values ranging between 'min' and 'max' and with a 'nullprob' probability of null value occurrence.\n     * @param {object} config Eg. {min: -50, max: 200, total: 1000, nullprob: 0.1}\n     * @example var n = NumericVector.generate();\n     * @example var n = NumericVector.generate({total: 1000});\n     * @example var n = NumericVector.generate({total: 1000, min: 0});\n     * @example var n = NumericVector.generate({total: 1000, min: 0, max: 200});\n     * @example var n = NumericVector.generate({total: 100, min: 0, nullprob: 0.5});\n     * Returns a new instance of the vector with random values.\n     */\n    static generate(config = {}) {\n        var min = isNaN(config.min) ? - Number.MAX_SAFE_INTEGER : Number(config.min) < - Number.MAX_SAFE_INTEGER ? - Number.MAX_SAFE_INTEGER : Number(config.min);\n        var max = isNaN(config.max) ? Number.MAX_SAFE_INTEGER : Number(config.max) > Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : Number(config.max);\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\n        if(max < min){\n            var _min = config.min;\n            var _max = config.max\n            min = _max;\n            max = _min\n        };\n        var decimal = Number(config.decimal) > 0 ? Math.floor(config.decimal) : 0;\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\n        var _new = new NumericVector();                                \n        for(var i = 0; i < total; i++) {            \n            if(nullprob > 0) {\n                if(Math.random() <= nullprob) {\n                    Array.prototype.push.call(_new,null);\n                } else Array.prototype.push.call(_new, Math.rndNumber(min,max,decimal));\n            } else Array.prototype.push.call(_new, Math.rndNumber(min,max,decimal));\n        };        \n        return _new;\n    };\n}\nNumericVector.prototype.parse = vectorParser.numeric;\n\nclass StringVector extends Vector {\n    constructor(){\n        super(...arguments);\n    }\n    /**\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\n     * @returns {number | string} Returns the type of this vector.\n     */\n    type(verbose) {\n        if(verbose) return \"StringVector\";\n        else return 2;\n    }\n    /**\n     * Generates a string vector with 'total' of random text values selected from the 'list' of values. The list argument can be either an array of values or an integer. If the latter is provided, N values are randomly selected from a built-in list of nouns (max 1000 otems).\n     * @param {object} config Eg. {total: 500, list: [\"A\",\"B\",\"C\"]} or {total: 500, list: 5}\n     * @example var strings = StringVector.generate({list: [\"A\",\"B\", \"C\"], total: 100000, nullprob: 0.5})\n     * @example var strings = StringVector.generate({list: 4, total: 100000, nullprob: 0.2})\n     * @example var strings = StringVector.generate({list: 5, nullprob: 0.175})\n     * @example var strings = StringVector.generate({list: 5})\n     * Returns a new instance of the vector with random values.\n     */\n    static generate(config = {}) {\n        let list;\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\n        if(config?.list === undefined) {\n            list = locale.getRandomWords(5);\n        }\n        else if(!isNaN(config.list)) {            \n            //list = Math.rndSelect(rndWordList, Number(config.list), false);\n            list = this.locale.getRandomWords(Number(config.list));\n        } else list = config.list;\n        var _new = new StringVector();\n        for(var i = 0; i < total; i++) {\n            if(nullprob > 0) {\n                if(Math.random() <= nullprob) {\n                    Array.prototype.push.call(_new, null);\n                } else Array.prototype.push.call(_new, Math.rndSelectOne(list))\n            } else Array.prototype.push.call(_new, Math.rndSelectOne(list));\n        }\n        return _new;\n    };\n}\nStringVector.prototype.parse = vectorParser.string;\n\nclass BooleanVector extends Vector {\n    constructor(){\n        super(...arguments);\n    }\n    /**\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\n     * @returns {number | string} Returns the type of this vector.\n     */\n    type(verbose) {\n        if(verbose) return \"BooleanVector\";\n        else return 3;\n    }\n    /**\n     * Generates a boolean vector with 'total' of random boolean (true/false) values.\n     * @param {object} config Eg. {total: 500} or {total: 500, nullprob: 0.25}\n     * @example var b = BooleanVector.generate({total: 10000, nullprob: 0.5});\n     * @example var b = BooleanVector.generate({total: 10000});\n     * @example var b = BooleanVector.generate({});\n     * @example var b = BooleanVector.generate();\n     * Returns a new instance of the vector with random values.\n     */\n    static generate(config = {}) {\n        let list = [1,0];\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\n        var _new = new BooleanVector();\n        for(var i = 0; i < total; i++) {\n            if(nullprob > 0) {\n                if(Math.random() <= nullprob) {\n                    Array.prototype.push.call(_new, null);\n                } else Array.prototype.push.call(_new, Math.rndSelectOne(list))\n            } else Array.prototype.push.call(_new, Math.rndSelectOne(list))\n        }\n        return _new;\n    };\n    format(value, index, parent) {\n        if(this.formatter()) return this.format(value, index, parent);\n        else return value === 1 ? true : value === 0 ? false : null;\n    }\n}\nBooleanVector.prototype.parse = vectorParser.boolean;\n\nclass TimeVector extends Vector {\n    constructor(){\n        super();        \n        if([...arguments].length > 0) this.push(...arguments);        \n    }\n    push(){\n        for(let i of [...arguments]){\n            if(this.parse) super.push(this.parse(i));\n            else super.push(i);\n        }\n    }    \n    /**\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\n     * @returns {number | string} Returns the type of this vector.\n     */\n    type(verbose) {\n        if(verbose) return \"TimeVector\";\n        else return 4;\n    }\n    /**\n     * Generates a new time vector with 'total' randomly generated values ranging between 'min' and 'max' and with a 'nullprob' probability of null value occurrence.\n     * @param {object} config Eg. {min: -50, max: 200, total: 1000, nullprob: 0.1}\n     * @example var n = NumericVector.generate();\n     * @example var n = NumericVector.generate({total: 1000});\n     * @example var n = NumericVector.generate({total: 1000, min: 0});\n     * @example var n = NumericVector.generate({total: 1000, min: 0, max: 200});\n     * @example var n = NumericVector.generate({total: 100, min: 0, nullprob: 0.5});\n     * Returns a new instance of the vector with random values.\n     */\n    static generate(config = {}) {\n        var min = isNaN(new Date(config.min).getTime()) ? new Date(\"1000-01-01\").getTime() : new Date(config.min).getTime();\n        var max = isNaN(new Date(config.max).getTime()) ? new Date(\"2999-12-31\").getTime() : new Date(config.max).getTime();\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\n        if(max < min){\n            var _min = config.min;\n            var _max = config.max\n            min = _max;\n            max = _min\n        };\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\n        var _new = new TimeVector();\n        for(var i = 0; i < total; i++) {\n            if(nullprob > 0) {\n                if(Math.random() <= nullprob) {\n                    Array.prototype.push.call(_new, null);\n                } else Array.prototype.push.call(_new, Math.rndNumber(min,max,0));\n            } else Array.prototype.push.call(_new, Math.rndNumber(min,max,0));\n        }\n        return _new;\n    };\n    explode() {\n        return [\n            this.map(e => e !== null ? e.getFullYear() : null).numerify().name($(\"Mydr\")),\n            this.map(e => e !== null ? e.getMonth() + 1 : null).numerify().name($(\"v6qI\")), \n            this.map(e => e !== null ? e.getDate() : null).numerify().name($(\"o3Mh\")),\n            this.map(e => e !== null ? e.getHours() : null).numerify().name($(\"FKmI\")),\n            this.map(e => e !== null ? e.getMinutes() : null).numerify().name($(\"Jk73\")),\n            this.map(e => e !== null ? e.getSeconds() : null).numerify().name($(\"46Ew\")),\n            this.map(e => e !== null ? e.getMilliseconds() : null).numerify().name($(\"2hXX\"))\n        ]\n    }\n}\nTimeVector.prototype.parse = vectorParser.time;\n\nArray.prototype.numerify = function(){\n    return new NumericVector(...this);\n}\n\nArray.prototype.stringify = function(){\n    return new StringVector(...this);\n}\n\nArray.prototype.boolify = function(){\n    return new BooleanVector(...this);\n}\n\nArray.prototype.timefy = function(){\n    return new TimeVector(...this);\n}\n\nArray.prototype.vectorify = function() {\n    if(this.find(v => v !== true && v !==false && v !== null && v !==0 && v!==1))\n    {\n        try {\n            return new NumericVector(...this)\n        } catch (e) {\n            return new StringVector(...this);\n        }\n    } else return new BooleanVector(...this);\n}\n\n// #endregion\n\n\n\nlet _exports = {\n    Vector: Vector,\n    NumericVector: NumericVector,    \n    StringVector: StringVector,\n    BooleanVector: BooleanVector,\n    TimeVector: TimeVector,\n    vector: function() {return [...arguments].vectorify()},\n}\nmodule.exports = _exports;\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(10);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","eventHandler","async","locale","Array","prototype","Object","$","call","use","p","arguments","register","addDictionary","language","data","overwriteExisting","setData","setLanguage","setDefault","setListener","listenerFunction","listen","fn","toLocale","generateRandomString","length","result","counter","charAt","Math","floor","characters","random","hasOnlyVectorChildren","filter","e","isVector","asc","sort","b","desc","distinct","obj","index","self","findIndex","t","JSON","stringify","toAvgRanks","dir","_","map","Map","f","get","set","String","fill","what","repetition","x","getRandomIndexes","total_of_elements","samplesize","indexes","v","round","indexOf","push","rndNumber","min","max","decimal","multiplier","pow","rndSelect","array","total","allowDuplicates","_sample","rndSelectOne","sign","Function","indent","raw","toString","match","formatted","split","forEach","l","trim","Date","isDate","date","isNaN","valueOf","fillRnd","__default","wordList","_default","window","localStorage","getItem","navigator","userLanguage","Intl","DateTimeFormat","resolvedOptions","keys","key","getDefault","value","undefined","console","warn","default","code","_text","entries","_replace","listLanguages","setWordList","list","getRandomWord","g","isArray","getRandomWords","text","k","replace","NumericVector","StringVector","BooleanVector","TimeVector","Vector","registry","WeakMap","defaultEventHandlers","eventName","on","handler","event","setRegistryProperty","parent","getRegistryProperty","matrify","M","Matrix","vectorify","constructor","super","id","trigger","name","alwaysReturnSelf","old","new","find","error","type","callbackFn","thisArg","isMatrix","_m","pivot","target","factor","selectedKeys","item","selection","select","intersection","label","format","formatter","clone","flush","identifier","Number","remove","identifiers","slice","from","to","Infinity","arg","appendRow","row","groups","Error","r","maxRows","filterByIndex","removeEmpty","fs","flat","rows","asObject","c","values","minRows","sample","size","analyze","method","MatrixAnalysis","serialize","config","beautify","vectors","orderBy","direction","ascIndex","descIndex","_with","empty","_push","who","static","source","parse","deserialize","info","meta","alwaysRetunSelf","getMeta","includeId","m","concat","count","reload","apply","eval","log","class","events","ifilter","off","convert","append","localize","vector","function","vectorParser","numeric","string","boolean","time","getTime","verbose","MAX_SAFE_INTEGER","nullprob","_min","_new","explode","getFullYear","numerify","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","boolify","timefy","_exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__webpack_exports__"],"sourceRoot":""}